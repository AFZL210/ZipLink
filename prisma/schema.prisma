generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int     @id @default(autoincrement())
  username      String?
  email         String  @unique
  password      String
  links         Link[]
  subscription  Boolean @default(false)
  profileImg    String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  accounts      Account[]
  sessions      Session[]
}


model Account {
  id                 Int  @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model Session {
  id                  Int      @id @default(autoincrement())
  sessionToken        String   @unique
  userId              Int
  expires             DateTime
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Link {
  id            Int             @id @default(autoincrement())
  url           String
  shortUrl      String
  clicks        Int             @default(0)
  user          User            @relation(fields: [linkId], references: [id])
  linkId        Int
  location      LinkLocation[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  isPrivate     Boolean         @default(false)
  linkPassword  String?          
}

model LinkLocation {
  id            Int             @id @default(autoincrement())
  linkCode      Int
  lat           Decimal?
  lng           Decimal?
  city          String?
  country       String?
  link          Link            @relation(fields: [locationId], references: [id], onDelete: Cascade)
  locationId    Int
}